spring:
  config:
    activate:
      on-profile: test

  # MySQL Database 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/testdb?allowPublicKeyRetrieval=true&useSSL=false&requireSSL=false # 테스트용 MySQL DB 연결 주소
    username: testuser                          # 테스트용 MySQL DB 접속 ID
    password: testpassword                      # 테스트용 MySQL DB 접속 PW

  # page 설정
  data:
    web:
      pageable:
        default-page-size: 20
        max-page-size: 2000

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop        # DB 초기화 전략 (none, create, create-drop, update, validate)
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect  # MySQL 방언으로 변경
        format_sql: true      # 쿼리 로그 포맷 (정렬)
        show_sql: true        # 쿼리 로그 출력

  # Cache 설정
  cache:
    type: redis

  # Redis 설정
  redis:
    host: localhost
    port: 6379

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG # Hibernate SQL 로그를 디버그 레벨로 설정
        type:
          descriptor:
            sql:
              BasicBinder: TRACE # SQL 바인딩 정보 로깅
    springframework:
      jdbc:
        core:
          JdbcTemplate: DEBUG # JdbcTemplate 로그를 디버그 레벨로 설정
          StatementCreatorUtils: DEBUG # StatementCreatorUtils 로그를 디버그 레벨로 설정
      orm:
        jpa: DEBUG # JPA 로그를 디버그 레벨로 설정
      transaction: DEBUG # 트랜잭션 로그를 디버그 레벨로 설정
      data:
        jpa:
          repository:
            query: DEBUG # JPA 쿼리 로그를 디버그 레벨로 설정
          support:
            SimpleJpaRepository: DEBUG # SimpleJpaRepository 로그를 디버그 레벨로 설정
      orm.jpa.vendor.HibernateJpaDialect: DEBUG # HibernateJpaDialect 로그를 디버그 레벨로 설정